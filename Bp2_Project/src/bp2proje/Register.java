/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bp2proje;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Selin Sude ATALI
 */
public class Register extends javax.swing.JFrame {

    /**
     * Creates new form Register
     */
    public Register() {
        initComponents();
        //Panelimin maksimum boyuta gelmesini istemediğim için bu kodu yazdım.
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        lbl_id = new javax.swing.JLabel();
        lbl_name = new javax.swing.JLabel();
        lbl_surname = new javax.swing.JLabel();
        lbl_type = new javax.swing.JLabel();
        lbl_username = new javax.swing.JLabel();
        lbl_email = new javax.swing.JLabel();
        lbl_password = new javax.swing.JLabel();
        btn_save = new javax.swing.JButton();
        txt_id = new javax.swing.JTextField();
        txt_name = new javax.swing.JTextField();
        txt_surname = new javax.swing.JTextField();
        combobox_type = new javax.swing.JComboBox<>();
        txt_username = new javax.swing.JTextField();
        txt_repassword = new javax.swing.JPasswordField();
        txt_password = new javax.swing.JPasswordField();
        lbl_repassword = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        jScrollPane1.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 650));
        setPreferredSize(new java.awt.Dimension(500, 650));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_id.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_id.setText("Identification Number:");
        getContentPane().add(lbl_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 74, 140, 20));

        lbl_name.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_name.setText("Name:");
        getContentPane().add(lbl_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 134, 140, 20));

        lbl_surname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_surname.setText("Surname:");
        getContentPane().add(lbl_surname, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 198, 140, 20));

        lbl_type.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_type.setText("Type:");
        getContentPane().add(lbl_type, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 256, 140, 20));

        lbl_username.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_username.setText("Username:");
        getContentPane().add(lbl_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 312, 140, 20));

        lbl_email.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_email.setText("Email:");
        getContentPane().add(lbl_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 377, 140, 20));

        lbl_password.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_password.setText("Password:");
        getContentPane().add(lbl_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 436, 140, 20));

        btn_save.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon_images/save.png"))); // NOI18N
        btn_save.setText("Save System");
        btn_save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_saveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_saveMouseExited(evt);
            }
        });
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });
        getContentPane().add(btn_save, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 537, -1, -1));

        txt_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nameKeyPressed(evt);
            }
        });
        getContentPane().add(txt_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 71, 140, 30));

        txt_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nameKeyPressed(evt);
            }
        });
        getContentPane().add(txt_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 131, 140, 30));

        txt_surname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nameKeyPressed(evt);
            }
        });
        getContentPane().add(txt_surname, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 195, 140, 30));

        combobox_type.setBackground(new java.awt.Color(107, 204, 204));
        combobox_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Client", "Estate Agent" }));
        combobox_type.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nameKeyPressed(evt);
            }
        });
        getContentPane().add(combobox_type, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 252, 140, 30));

        txt_username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nameKeyPressed(evt);
            }
        });
        getContentPane().add(txt_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 309, 140, 30));

        txt_repassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nameKeyPressed(evt);
            }
        });
        getContentPane().add(txt_repassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 489, 140, 30));

        txt_password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nameKeyPressed(evt);
            }
        });
        getContentPane().add(txt_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 433, 140, 30));

        lbl_repassword.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_repassword.setText("Repassword:");
        getContentPane().add(lbl_repassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 492, 140, 20));

        txt_email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nameKeyPressed(evt);
            }
        });
        getContentPane().add(txt_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 374, 140, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon_images/bluebacckground.jpg"))); // NOI18N
        jLabel1.setMinimumSize(new java.awt.Dimension(500, 650));
        jLabel1.setPreferredSize(new java.awt.Dimension(500, 650));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -70, 510, 690));

        pack();
    }// </editor-fold>//GEN-END:initComponents
/*
    Öncelikle kullanıcımın kayıt olması sırasında bazı girilebilecek hataların tipini belirlemek için ResultSet ile database'ime bakıyorum.
    Eğer kullanıcının kayıt olmak istediği kullanıcı adı veya email sistemde kayıtlıysa bunu kullanıcıya bir uyarı ekranı ile bildiriyorum.
    Personel sınıfından person adında bir nesne oluşturuyorum ve kullanıcın girdiği bilgileri bu kişinin uygun değerlerine atıyorum. 
    Kullanıcıdan id textfield olarak aldığım için öncelikle uygun bir regex yazarak girdiği id'yi uygun formda mı diye kontrol ediyorum.Aynı
    şekilde username'de büyük harf ve türkçe karakter bulunmasını istemediğim için bir regex yazdım ve son olarak da email kontrolü için bir regex
    yazdım burada derste de öğrendiğimiz bir email regexini yazmayı tercih ettim. Eğer kullanıcının girdiği bilgiler geçerliyse yani şartlarıma 
    uyuyorsa onu oluşturduğum person kişisinin ilgili variable'larına kaydediyorum. En son eğer kontrollerde bir sorun olmamışsa kişiyi kaydediyorum
    ve kullanıcıya  bildiriyorum. Eğer kayıt olamamışsa hatanın türüne göre kullanıcıya bunu belirtiyorum.Örneğin kullanıcı adı sistemde kayıtlıysa
    bunu kullanıcı adı sistemde kayıtlıdır diye bildiriyorum.
     */
    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:derby://localhost:1527/Records";
        String user = "Selin";
        String password = "123";
        String query = "INSERT INTO RECORDS(id,name,surname,type,username,email,password)VALUES(?,?,?,?,?,?,?)";
        String check = "SELECT * FROM RECORDS";

        boolean check_b = false;
        boolean check_e = false;
        Personel person = new Personel();
        String id_pattern = "[0-9]+";
        String id_text = txt_id.getText();
        String email_txt = txt_email.getText();
        Pattern p_id = Pattern.compile(id_pattern);
        Matcher m_id = p_id.matcher(txt_id.getText());
        String username_pattern = "[a-z0-9]+";
        String username_txt = txt_username.getText();
        Pattern p_username = Pattern.compile(username_pattern);
        Matcher m_username = p_username.matcher(username_txt);
        Matcher m_email = Pattern.compile("^[^0-9]\\w*@((gmail)||(hotmail)||(icloud)||(outlook))(.com)").matcher(email_txt);
        String password1 = new String(txt_password.getPassword());
        String password2 = new String(txt_repassword.getPassword());
        if (m_username.matches()) {
            person.username = txt_username.getText();
        } else {
            JOptionPane.showMessageDialog(null, "Please enter correct username", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
        if (m_id.matches()) {
            person.id = Integer.parseInt(id_text);
        } else {
            JOptionPane.showMessageDialog(null, "Please enter correct id", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
        if (m_email.matches()) {
            person.email = txt_email.getText();
        } else {
            JOptionPane.showMessageDialog(null, "Please,enter correct email", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
        person.name = txt_name.getText();
        person.surname = txt_surname.getText();
        int index = combobox_type.getSelectedIndex();
        if (combobox_type.getItemAt(index) == "Estate Agent") {
            person.type = "Estate Agent";
        } else {
            person.type = "Client";
        }
        if (password1.equals(password2)) {
            person.password = new String(txt_password.getPassword());
        } else {
            JOptionPane.showMessageDialog(null, "Password don't match", "Warning!", JOptionPane.INFORMATION_MESSAGE);
        }
        try {
            Connection conn2 = DriverManager.getConnection(url, user, password);
            PreparedStatement ps2 = conn2.prepareStatement(check);
            ResultSet rs = ps2.executeQuery();
            while (rs.next()) {
                if (rs.getString(5).equals(person.username)) {
                    check_b = true;
                    break;
                }
                if (rs.getString(6).equals(person.email)) {
                    check_e = true;
                    break;
                }
            }

        } catch (SQLException ex) {
            Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
        }

        if ((person.id != 0) && (check_b == false) && (check_e == false)) {
            try {
                Connection conn = DriverManager.getConnection(url, user, password);
                PreparedStatement ps = conn.prepareStatement(query);
                ps.setInt(1, person.id);
                ps.setString(2, person.name);
                ps.setString(3, person.surname);
                ps.setString(4, person.type);
                ps.setString(5, person.username);
                ps.setString(6, person.email);
                ps.setString(7, person.password);
                ps.executeUpdate();
                ps.close();
                conn.close();
                JOptionPane.showMessageDialog(null, "Registration successful.", "Information", JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Registration failed.", "Warning", JOptionPane.INFORMATION_MESSAGE);
            }
        } else if (check_b == true) {

            JOptionPane.showMessageDialog(null, "The username is registered in the system.Registration failed.", "Warning", JOptionPane.INFORMATION_MESSAGE);
        } else if (check_e = true) {
            JOptionPane.showMessageDialog(null, "The email is registered in the system.Registration failed.", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }


    }//GEN-LAST:event_btn_saveActionPerformed
    /*
    Kullanıcı save butonunun üzerine geldiğinde butonun arkaplanının rengini cyan butondan çıktığında ise light gray yapıyorum.
     */
    private void btn_saveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_saveMouseEntered
        // TODO add your handling code here:
        btn_save.setBackground(Color.CYAN);
    }//GEN-LAST:event_btn_saveMouseEntered

    private void btn_saveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_saveMouseExited
        // TODO add your handling code here:
        btn_save.setBackground(Color.LIGHT_GRAY);
    }//GEN-LAST:event_btn_saveMouseExited
    /*
     Kullanıcı eğer bilgilerini girdiyse herhangi bir şeyin üzerinde enter tuşuna bastığında doclick metodu ile bnt_save'e basıldığında olacak
    eylemleri çağırıyorum.
     */
    private void txt_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nameKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            btn_save.doClick();
        }
    }//GEN-LAST:event_txt_nameKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Register register = new Register();
                register.setLocationRelativeTo(null);

                register.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_save;
    private javax.swing.JComboBox<String> combobox_type;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_email;
    private javax.swing.JLabel lbl_id;
    private javax.swing.JLabel lbl_name;
    private javax.swing.JLabel lbl_password;
    private javax.swing.JLabel lbl_repassword;
    private javax.swing.JLabel lbl_surname;
    private javax.swing.JLabel lbl_type;
    private javax.swing.JLabel lbl_username;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_name;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JPasswordField txt_repassword;
    private javax.swing.JTextField txt_surname;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
}
