/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bp2proje;

import java.awt.Component;
import java.awt.Image;

import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.ArrayList;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Selin Sude ATALI
 */
public class List_buy extends javax.swing.JFrame {
//1

    int id_buy = 0;

    String username_list = "";

    /**
     * Creates new form List
     */
    public List_buy() {
        initComponents();

    }

    /*
    Öncelikle house sınıfından bir nesne oluşturuyorum ve house sınıfındaki houseList metodumu çağırıyorum ve bana oradan kullanıcının evlerinin bilgisi geliyor.
    Bunları oluşturduğum Table eklemek için bir for döngüsünden yararlanıyorum ama evin bütün bilgilerinin sisteme eklenmesini istemediğim için sadece 9 sütunluk bir table oluşturuyorum ve eğer
    kullanıcı hangi eve tıkladıysa onun bütün özelliklerini o zaman görecek. Burada önceden gelen evin fotoğraflarını direkt label'a aktarıyordum ama
    araştırmalarım sonucunda Java'nın DefaultTableCellRenderer özelliğinden yararlanıyorum.Burada kullandığım setDefaultRenderer eğer herhangi bir renderer ayarlanmamışsa
    kullanılacak varsayılan default cell renderer oluşturucuyu ayarlar. İlk parametre columnClass = bu columnClass için 
    set default cell renderer ayarlar. 2.parametre renderer bu columnClass için default cell renderer.
    
     */
    public void show_house() {
        House house = new House();
        ArrayList<House> list = house.houseList();
        jTable_Display_User.setDefaultRenderer(Object.class, new TablaImagen());
        DefaultTableModel model = (DefaultTableModel) jTable_Display_User.getModel();
        Object[] row = new Object[8];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).id;
            row[1] = list.get(i).type;
            row[2] = list.get(i).city;
            row[3] = list.get(i).rooms;
            row[4] = list.get(i).square;
            row[5] = list.get(i).forhouse;
            row[6] = list.get(i).cost;
            try {
                ImageIcon image = new ImageIcon(new ImageIcon(list.get(i).image).getImage().getScaledInstance(300, 200, Image.SCALE_SMOOTH));
                row[7] = new JLabel(image);
            } catch (Exception ex) {

            }

            model.addRow(row);
            jTable_Display_User.setModel(model);
            jTable_Display_User.setRowHeight(150);

        }

    }

    /*
    TableCellRenderer Jtable hücresini görünteleeyen bir bileşen oluşturur. Her tablo hücresinin değerini görüntülemek için JLabel'i kullanır.
     */
    public class TablaImagen extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            if (value instanceof JLabel) {
                JLabel lbl = (JLabel) value;
                return lbl;
            }

            return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Display_User = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 800));
        setPreferredSize(new java.awt.Dimension(800, 800));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jTable_Display_User.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Type", "City", "Rooms", "Square", "Forhouse", "Cost", "Photo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_Display_User.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_Display_UserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Display_User);

        getContentPane().add(jScrollPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
/*
    Burada kişi jTable da seçtiği row'un 0.indexini yani id'sini alıyorum ve kaydediyorum. image_show'daki list metodumu çağırıyorum bu metot
    sayesinde ilk olarak bütün evleri houseList'e kaydediyorum ve kaçıncı satırı seçtiysem houselistte o satırdaki bilgilerin tamamını list şeklinde 
    ekrana yazdırıyorum.
     */
    private void jTable_Display_UserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_Display_UserMouseClicked
        // TODO add your handling code here:

        int i = jTable_Display_User.getSelectedRow();
        int value = (int) jTable_Display_User.getValueAt(i, 0);
        Image_show image_show = new Image_show();
        image_show.i = i;
        image_show.index = value;
        image_show.id_user = id_buy;
        image_show.list();
        image_show.username_image = username_list;
        this.dispose();
        image_show.setLocationRelativeTo(null);
        image_show.setVisible(true);

    }//GEN-LAST:event_jTable_Display_UserMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(List_buy.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(List_buy.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(List_buy.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(List_buy.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new List_buy().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Display_User;
    // End of variables declaration//GEN-END:variables
}
