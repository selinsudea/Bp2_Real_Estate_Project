/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package bp2proje;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Selin Sude ATALI
 */
public class Change_password extends javax.swing.JInternalFrame {

    String username;

    public Change_password() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_username = new javax.swing.JTextField();
        txt_oldpassword = new javax.swing.JTextField();
        txt_newpassword = new javax.swing.JPasswordField();
        txt_repassword = new javax.swing.JPasswordField();
        btn_change = new javax.swing.JButton();
        checkbox_showpassword = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setMinimumSize(new java.awt.Dimension(350, 320));
        setPreferredSize(new java.awt.Dimension(350, 320));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(350, 320));
        jPanel1.setPreferredSize(new java.awt.Dimension(350, 320));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Id:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 100, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Old password:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 100, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("New password:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 100, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("New repassword:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, 30));
        jPanel1.add(txt_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 120, 30));
        jPanel1.add(txt_oldpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 120, 30));
        jPanel1.add(txt_newpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 120, 30));
        jPanel1.add(txt_repassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 170, 120, 30));

        btn_change.setBackground(new java.awt.Color(255, 153, 204));
        btn_change.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_change.setText("Change password");
        btn_change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_changeActionPerformed(evt);
            }
        });
        jPanel1.add(btn_change, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 240, -1, 44));

        checkbox_showpassword.setText("Show password");
        checkbox_showpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkbox_showpasswordActionPerformed(evt);
            }
        });
        jPanel1.add(checkbox_showpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon_images/bluebacckground.jpg"))); // NOI18N
        jLabel5.setMaximumSize(new java.awt.Dimension(350, 320));
        jLabel5.setMinimumSize(new java.awt.Dimension(350, 320));
        jLabel5.setPreferredSize(new java.awt.Dimension(350, 320));
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 350));

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    btn_change basıldığında ilk olarak new password ve repassword'un birbiriyle aynı olduğunu kontrol ediyorum.Eğer aynı değilse işlem hiç yaptırmadan
    passwords dont match uyarısını gönderiyorum.Eğer aynılarsa database'imi bağlıyorum ve ResultSet ile ilgili database'imde geziyorum.Eğer girilen id,username ve oldpassword eşleşiyorsa (üçüde 1-1-1 olmak zorunda && 
    kullandığımdan ötürü,yani ikiside tek bir kişide eşleşmeli) ilgili kişinin id'sini person'ın id'sine kaydediyorum.
    ve boolean kontrol'u true olarak değiştiriyorum. Burada güncellemek için sql'in update özelliğinden yararlanıyorum. ps.setString ile
    kullanıcının şifresini girilen id'nin database'de eşit olduğu yerde değiştiriyorum ve executeupdate ile database'i güncelliyorum.Eğer kontrol==true
    ise kullanıcıya update correctly mesajını gösteriyorum.False ise kullanıcıya herhangi bir girdiği bilginin hatalı olduğunu bildiriyorum.
     */
    private void btn_changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_changeActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:derby://localhost:1527/Records";
        String user = "Selin";
        String password = "123";
        String sifre = new String(txt_newpassword.getPassword());
        int value = 0;
        boolean kontrol = false;
        Personel person = new Personel();
        String query = "SELECT * FROM RECORDS";
        int id = Integer.parseInt(txt_username.getText());

        if (new String(txt_newpassword.getPassword()).equals(new String(txt_repassword.getPassword()))) {
            try {
                Connection conn = DriverManager.getConnection(url, user, password);
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery(query);
                String sorgu = "UPDATE records set password=? where id =?";
                PreparedStatement ps = conn.prepareStatement(sorgu);
                while (rs.next()) {
                    if ((rs.getInt(1) == id) && (rs.getString(7).equals(txt_oldpassword.getText())) && (rs.getString(5).equals(username))) {
                        person.id = rs.getInt(1);
                        value = person.id;
                        ps.setString(1, sifre);
                        ps.setInt(2, value);
                        ps.executeUpdate();
                        kontrol = true;
                    }
                }
                if (kontrol == true) {
                    JOptionPane.showMessageDialog(null, "Update correctly", "Information", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Wrong password , id or username", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
                st.close();
                ps.close();
                conn.close();

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Wrong password , id or username", "Warning", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Paswords dont match", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btn_changeActionPerformed
    /*
    Eğer show password seçildiyse kullanıcı şifresini bir textfield da olduğu gibi görebiliyor.Eğer seçili değilse
    her karakter * ile gizleniyor.
     */
    private void checkbox_showpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkbox_showpasswordActionPerformed
        // TODO add your handling code here:
        if (checkbox_showpassword.isSelected()) {
            txt_newpassword.setEchoChar((char) 0);
            txt_repassword.setEchoChar((char) 0);
        } else {
            txt_newpassword.setEchoChar('*');
            txt_repassword.setEchoChar('*');
        }
    }//GEN-LAST:event_checkbox_showpasswordActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_change;
    private javax.swing.JCheckBox checkbox_showpassword;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField txt_newpassword;
    private javax.swing.JTextField txt_oldpassword;
    private javax.swing.JPasswordField txt_repassword;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
}
