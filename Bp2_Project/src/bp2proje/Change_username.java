/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package bp2proje;

import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Selin Sude ATALI
 */
public class Change_username extends javax.swing.JInternalFrame {

    String username = "";
    int id = 0;

    public Change_username() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbl_oldusername = new javax.swing.JLabel();
        lbl_newusername = new javax.swing.JLabel();
        lbl_password = new javax.swing.JLabel();
        txt_oldusername = new javax.swing.JTextField();
        txt_newusername = new javax.swing.JTextField();
        txt_password = new javax.swing.JTextField();
        btn_change = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setMinimumSize(new java.awt.Dimension(350, 300));
        setOpaque(true);
        setPreferredSize(new java.awt.Dimension(350, 300));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setMinimumSize(new java.awt.Dimension(350, 300));
        jPanel1.setPreferredSize(new java.awt.Dimension(350, 300));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_oldusername.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_oldusername.setText("Old username:");
        jPanel1.add(lbl_oldusername, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 52, 100, 30));

        lbl_newusername.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_newusername.setText("New username:");
        jPanel1.add(lbl_newusername, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 102, 100, 30));

        lbl_password.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_password.setText("Password:");
        jPanel1.add(lbl_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 159, 100, 30));
        jPanel1.add(txt_oldusername, new org.netbeans.lib.awtextra.AbsoluteConstraints(178, 54, 140, 30));
        jPanel1.add(txt_newusername, new org.netbeans.lib.awtextra.AbsoluteConstraints(178, 111, 140, 30));
        jPanel1.add(txt_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(178, 161, 140, 30));

        btn_change.setBackground(new java.awt.Color(255, 153, 204));
        btn_change.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_change.setText("Change");
        btn_change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_changeActionPerformed(evt);
            }
        });
        jPanel1.add(btn_change, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 209, 100, 41));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon_images/bluebacckground.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, 3, 360, 300));

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    btn_change basıldığında ilk olarak new username'in belirlediğim regex kurallarına uygun olup olmadığını kontrol ediyorum.Uygun değilse kullanıcıya bir mesaj 
    ile bildiriyorum.Eğer uygunsa database'imi bağlıyorum ve kullanıcının eski adı ile şifresi eşleştiğinde person.id'ye id kaydediyorum ve kontrol=true yapıyorum.
    House database'imde de estate agent'ın username'ini kullandığımdan orada da bir güncelleme yapmam gerekiyor.Yani her iki veritabanında da 
    güncellemeliyim bu yüzden id'nin person.id'ye eşit olduğu anda kullanıcı adını Records ve House database'imde de güncelletiyorum.Yine eğer bir hata
    varsa veya işlem başarılıysa bunu kullanıcıma bildiriyorum.
     */
    private void btn_changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_changeActionPerformed
        // TODO add your handling code here:

        String url = "jdbc:derby://localhost:1527/Records";
        String user = "Selin";
        String password = "123";
        String pattern = "[a-z0-9]+";
        int value = 0;
        boolean kontrol = false;
        boolean check = false;

        String query = "SELECT * FROM RECORDS";
        Pattern p_username = Pattern.compile(pattern);
        Matcher m_username = p_username.matcher(txt_newusername.getText());
        Personel person = new Personel();
        if (m_username.matches()) {
            check = true;
        }

        if (check == true) {
            try {
                Connection conn = DriverManager.getConnection(url, user, password);
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery(query);

                while (rs.next()) {
                    if ((rs.getString(5).equals(txt_oldusername.getText())) && (rs.getString(7).equals(txt_password.getText()))) {
                        person.id = rs.getInt(1);
                        value = person.id;
                        kontrol = true;
                    }
                }

                String sorgu = "UPDATE records set username=? where id =" + value;
                String query2 = "UPDATE house set username=? where usernameid=" + value;
                PreparedStatement ps = conn.prepareStatement(sorgu);
                PreparedStatement ps2 = conn.prepareStatement(query2);
                if (kontrol == true) {
                    ps2.setString(1, txt_newusername.getText());
                    ps.setString(1, txt_newusername.getText());
                    ps2.executeUpdate();
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Update correctly", "Information", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Wrong password or username!", "Warning", JOptionPane.INFORMATION_MESSAGE);
                }
                
                st.close();
                ps2.close();
                ps.close();
                conn.close();

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Username registered to the system", "Warning", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please enter correct username", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }


    }//GEN-LAST:event_btn_changeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_change;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_newusername;
    private javax.swing.JLabel lbl_oldusername;
    private javax.swing.JLabel lbl_password;
    private javax.swing.JTextField txt_newusername;
    private javax.swing.JTextField txt_oldusername;
    private javax.swing.JTextField txt_password;
    // End of variables declaration//GEN-END:variables
}
